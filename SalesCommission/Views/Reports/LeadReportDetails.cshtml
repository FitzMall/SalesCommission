@model SalesCommission.Models.LeadReportDetailsModel

@{
    ViewBag.Title = "Lead Report Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var applicationPath = Request.ApplicationPath;

    if (applicationPath == "/")
    {
        applicationPath = "";
    }

    var breakDowns = new List<string>();
    var breakDownValues = new List<string>();

    breakDowns.Add("Associate");
    breakDownValues.Add("associatename");

    breakDowns.Add("Brand");
    breakDownValues.Add("brand");

    breakDowns.Add("Inventory Type");
    breakDownValues.Add("inventorytype");

    breakDowns.Add("Lead Date");
    breakDownValues.Add("leaddate");

    breakDowns.Add("Lead Time");
    breakDownValues.Add("leadtime");

    breakDowns.Add("Lead Group");
    breakDownValues.Add("leadgroupname");

    breakDowns.Add("Lead Source");
    breakDownValues.Add("leadsourcename");

    breakDowns.Add("Lead Condition");
    breakDownValues.Add("leadstatusname");

    breakDowns.Add("Lead Status");
    breakDownValues.Add("leadstatustype");

    breakDowns.Add("Location");
    breakDownValues.Add("locationid");

    breakDowns.Add("Make");
    breakDownValues.Add("make");

    breakDowns.Add("Model");
    breakDownValues.Add("model");

    breakDowns.Add("Sales Team");
    breakDownValues.Add("salesteam");

    breakDowns.Add("Stock Number");
    breakDownValues.Add("stock");

    breakDowns.Add("Zip Code");
    breakDownValues.Add("zip");

    var BreakDownLabel1 = "";
    var BreakDownLabel2 = "";
    var BreakDownLabel3 = "";
    var BreakDownLabel4 = "";

    var index = 0;
    foreach (var breakdown in breakDownValues)
    {
        if(breakdown == Model.BreakDownLevel1)
        {
            BreakDownLabel1 = breakDowns[index];
        }
        if (breakdown == Model.BreakDownLevel2)
        {
            BreakDownLabel2 = breakDowns[index];
        }
        if (breakdown == Model.BreakDownLevel3)
        {
            BreakDownLabel3 = breakDowns[index];
        }
        if (breakdown == Model.BreakDownLevel4)
        {
            BreakDownLabel4 = breakDowns[index];
        }
        index += 1;
    }

    if(Model.BreakDownLevel1 == "locationid")
    {
        foreach (var vinStore in SalesCommission.Business.Enums.VinStores)
        {
            if (vinStore.StoreId == Model.BreakDownLevel1Value)
            {
                Model.BreakDownLevel1Value = vinStore.Name;
            }
        }
    }

    if (Model.BreakDownLevel2 == "locationid")
    {
        foreach (var vinStore in SalesCommission.Business.Enums.VinStores)
        {
            if (vinStore.StoreId == Model.BreakDownLevel2Value)
            {
                Model.BreakDownLevel2Value = vinStore.Name;
            }
        }
    }

    if (Model.BreakDownLevel3 == "locationid")
    {
        foreach (var vinStore in SalesCommission.Business.Enums.VinStores)
        {
            if (vinStore.StoreId == Model.BreakDownLevel3Value)
            {
                Model.BreakDownLevel3Value = vinStore.Name;
            }
        }
    }

    if (Model.BreakDownLevel4 == "locationid")
    {
        foreach (var vinStore in SalesCommission.Business.Enums.VinStores)
        {
            if (vinStore.StoreId == Model.BreakDownLevel4Value)
            {
                Model.BreakDownLevel4Value = vinStore.Name;
            }
        }
    }


}
@section CSS
{
<link rel="stylesheet" href="~/Scripts/jquery-ui.css">
<style type="text/css">
    .container {
        max-width: 100%;
    }
    .report-parameters{
        background-color:#eee;
    }

    .hr-divider{
        border-color:#999; margin-top:10px; margin-bottom:10px;
    }
    .hr-separator{
        border-color:#999; border-style:dashed; margin-top:10px; margin-bottom:5px;
    }
</style>
    }
<div class="row report-parameters" style="padding-top:15px;">
    <div class="col-xs-12">
        <h2>Lead Report Details</h2>
    </div>
</div>
<div class="row">
    <div class="col-xs-2 report-parameters" style="padding-top:15px;padding-bottom:15px;">
        
        <div class="row">
            <div class="col-sm-6">
                <strong>Start Date:</strong>
            </div>
            <div class="col-sm-6">
                <strong>End Date:</strong>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                @Model.ReportStartDate.ToShortDateString()
            </div>
            <div class="col-sm-6">
                @Model.ReportEndDate.ToShortDateString()
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <hr class="hr-divider" />
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <strong>Breakdowns:</strong>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                @BreakDownLabel1
            </div>
            <div class="col-sm-6">
                @Model.BreakDownLevel1Value
            </div>
        </div>
@if (Model.BreakDownLevel2Value != null)
{
        <div class="row">
            <div class="col-sm-12">
                <hr class="hr-separator" />
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                @BreakDownLabel2
            </div>
            <div class="col-sm-6">
                @Model.BreakDownLevel2Value
            </div>
        </div>
}
        @if (Model.BreakDownLevel3Value != null)
        {
            <div class="row">
                <div class="col-sm-12">
                    <hr class="hr-separator" />
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    @BreakDownLabel3
                </div>
                <div class="col-sm-6">
                    @Model.BreakDownLevel3Value
                </div>
            </div>
        }
@if (Model.BreakDownLevel4Value != null)
{
        <div class="row">
            <div class="col-sm-12">
                <hr class="hr-separator" />
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                @BreakDownLabel4
            </div>
            <div class="col-sm-6">
                @Model.BreakDownLevel4Value
            </div>
        </div>
}
               <div class="row">
            <div class="col-sm-12">
                <hr class="hr-divider" />
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <strong>Lead Type Filters:</strong>
            </div>
        </div>
        <div class="row" style="margin-bottom: 15px;">
            <div class="col-sm-12">
                <input type="checkbox" id="chkBadDuplicates" name="chkBadDuplicates" @(Model.ExcludeBadDuplicates == true ? "checked" : "") disabled/> Exclude Bad Duplicates<br />
                <input type="checkbox" id="chkShowExcluded" name="chkShowExcluded" @(Model.ShowExcludedGroups == true ? "checked" : "") disabled/> Show Excluded Groups<br />
                <input type="checkbox" id="chkExcludeAllBad" name="chkExcludeAllBad" @(Model.ExcludeAllBad == true ? "checked" : "") disabled/> Exclude All Bad Leads
            </div>
        </div>
       </div>
    <div class="col-xs-10" style="padding-top:15px;">
        @if(Model.AssociateLeads != null)
        {
            <table id="associate-lead-table" class="table table-striped table-bordered">
                <thead>
                    <tr style="background-color:#d9edf7;">
                        <th class="text-center">Lead ID</th>
                        <th class="text-center">Lead Date</th>
                        <th class="text-center">Customer</th>
                        <th class="text-center">Lead Status</th>
                        <th class="text-center">Lead Status Type</th>
                        <th class="text-center">Lead Source</th>
                        <th class="text-center">Lead Source Type</th>
                        <th class="text-center">Lead Source Group</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var lead in Model.AssociateLeads)
                    {
                    <tr>
                        <td class="text-center">@lead.LeadId</td>
                        <td class="text-center">@lead.LeadCreatedEastTime.ToShortDateString()</td>
                        <td class="text-center"><a class="deal-detail" href="https://apps.vinmanager.com/CarDashboard/Pages/CRM/CustomerDashboard.aspx?GlobalCustomerID=@lead.CustomerId&r=@lead.CustomerId" target="_blank">@lead.CustomerName</a></td>
                        <td class="text-center">@lead.LeadStatusName</td>
                        <td class="text-center">@lead.LeadStatusTypeName</td>
                        <td class="text-center">@lead.LeadSourceName</td>
                        <td class="text-center">@lead.LeadSourceTypeName</td>
                        <td class="text-center">@lead.LeadSourceGroupName</td>
                    </tr>
                    }
                </tbody>

            </table>



        }
    </div>
    </div>
@section scripts
{

    <script src="~/Scripts/jquery-ui.js" type="text/javascript"></script>
<script type="text/javascript">
                $('#associate-lead-table').DataTable({
                    searching: true,
                    dom: 'Bfrti',
                    pageLength: -1,
                    order: [[1, "desc"]],
                    buttons: [
                        {
                            extend: 'copyHtml5', footer: true,
                        },
                        {
                            extend: 'excelHtml5', footer: true,
                        },
                        {
                            extend: 'pdfHtml5', footer: true,
                            orientation: 'landscape'
                        },
                        {
                            extend: 'print', footer: true,
                            orientation: 'landscape'
                        }
                    ],
                    retrieve: true
                });

</script>
}