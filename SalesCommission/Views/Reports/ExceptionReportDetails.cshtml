@model SalesCommission.Models.ExceptionReportDetailModel

@{
    ViewBag.Title = "Exception Report Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var applicationPath = Request.ApplicationPath;

    if (applicationPath == "/")
    {
        applicationPath = "";
    }

    var breakDowns = new List<string>();
    var breakDownValues = new List<string>();

    breakDowns.Add("Bank Name");
    breakDownValues.Add("bankname");

    breakDowns.Add("Finance Manager");
    breakDownValues.Add("financemanager");

    breakDowns.Add("Location");
    breakDownValues.Add("location");

    //breakDowns.Add("Price Variance Exception");
    //breakDownValues.Add("priceexception");

    breakDowns.Add("Rate Exception");
    breakDownValues.Add("rateexception");

    breakDowns.Add("Sales Associate");
    breakDownValues.Add("salesassociate");

    var BreakDownLabel1 = "";
    var BreakDownLabel2 = "";
    var BreakDownLabel3 = "";
    var BreakDownLabel4 = "";

    var index = 0;
    foreach (var breakdown in breakDownValues)
    {
        if(breakdown == Model.BreakDownLevel1)
        {
            BreakDownLabel1 = breakDowns[index];
        }
        if (breakdown == Model.BreakDownLevel2)
        {
            BreakDownLabel2 = breakDowns[index];
        }
        if (breakdown == Model.BreakDownLevel3)
        {
            BreakDownLabel3 = breakDowns[index];
        }
        if (breakdown == Model.BreakDownLevel4)
        {
            BreakDownLabel4 = breakDowns[index];
        }
        index += 1;
    }

    if(Model.BreakDownLevel1 == "location")
    {
        foreach (var store in SalesCommission.Business.Enums.AppraisalLocations)
        {
            if (store.LocationId.ToLower().Trim() == Model.BreakDownLevel1Value.ToLower().Trim())
            {
                Model.BreakDownLevel1Value = store.Name;
            }
        }
    }

    if (Model.BreakDownLevel2 == "location")
    {
        foreach (var store in SalesCommission.Business.Enums.AppraisalLocations)
        {
            if (store.LocationId.ToLower().Trim() == Model.BreakDownLevel2Value.ToLower().Trim())
            {
                Model.BreakDownLevel2Value = store.Name;
            }
        }
    }

    if (Model.BreakDownLevel3 == "location")
    {
        foreach (var store in SalesCommission.Business.Enums.AppraisalLocations)
        {
            if (store.LocationId.ToLower().Trim() == Model.BreakDownLevel3Value.ToLower().Trim())
            {
                Model.BreakDownLevel3Value = store.Name;
            }
        }
    }

    if (Model.BreakDownLevel4 == "location")
    {
        foreach (var store in SalesCommission.Business.Enums.AppraisalLocations)
        {
            if (store.LocationId.ToLower().Trim() == Model.BreakDownLevel4Value.ToLower().Trim())
            {
                Model.BreakDownLevel4Value = store.Name;
            }
        }
    }


}
@section CSS
{
<link rel="stylesheet" href="~/Scripts/jquery-ui.css">
<style type="text/css">
    .container {
        max-width: 100%;
    }
    .report-parameters{
        background-color:#eee;
    }

    .hr-divider{
        border-color:#999; margin-top:10px; margin-bottom:10px;
    }
    .hr-separator{
        border-color:#999; border-style:dashed; margin-top:10px; margin-bottom:5px;
    }
</style>
    }
<div class="row report-parameters" style="padding-top:15px;">
    <div class="col-xs-12">
        <h2>Exception Report Details</h2>
    </div>
</div>
<div class="row">
    <div class="col-xs-2 report-parameters" style="padding-top:15px;padding-bottom:15px;">
        
        <div class="row">
            <div class="col-sm-6">
                <strong>Start Date:</strong>
            </div>
            <div class="col-sm-6">
                <strong>End Date:</strong>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                @Model.ReportStartMonth.ToString()/@Model.ReportStartYear.ToString()
            </div>
            <div class="col-sm-6">
                @Model.ReportEndMonth.ToString()/@Model.ReportEndYear.ToString()
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <hr class="hr-divider" />
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <strong>Breakdowns:</strong>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                @BreakDownLabel1
            </div>
            <div class="col-sm-6">
                @Model.BreakDownLevel1Value
            </div>
        </div>
@if (Model.BreakDownLevel2Value != null)
{
        <div class="row">
            <div class="col-sm-12">
                <hr class="hr-separator" />
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                @BreakDownLabel2
            </div>
            <div class="col-sm-6">
                @Model.BreakDownLevel2Value
            </div>
        </div>
}
        @if (Model.BreakDownLevel3Value != null)
        {
            <div class="row">
                <div class="col-sm-12">
                    <hr class="hr-separator" />
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    @BreakDownLabel3
                </div>
                <div class="col-sm-6">
                    @Model.BreakDownLevel3Value
                </div>
            </div>
        }
@if (Model.BreakDownLevel4Value != null)
{
        <div class="row">
            <div class="col-sm-12">
                <hr class="hr-separator" />
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                @BreakDownLabel4
            </div>
            <div class="col-sm-6">
                @Model.BreakDownLevel4Value
            </div>
        </div>
}
               <div class="row">
            <div class="col-sm-12">
                <hr class="hr-divider" />
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <strong>Deal Types:</strong>
            </div>
        </div>
        <div class="row" style="margin-bottom: 15px;">
            <div class="col-sm-12">
                <input type="radio" value="All" name="chkDealType" @(Model.DealType == "All" ? "checked" : "") disabled/> All<br />
                <input type="radio" value="Finance" name="chkDealType" @(Model.DealType == "Finance" ? "checked" : "") disabled/> Finance<br />
                <input type="radio" value="Cash" name="chkDealType" @(Model.DealType == "Cash" ? "checked" : "") disabled/> Cash<br />
            </div>
        </div>
        
       </div>
    <div class="col-xs-10" style="padding-top:15px;">
        
        @if(Model.ExceptionDetails != null)
        {
            <table id="associate-appraisal-table" class="table table-striped table-bordered">
                <thead>
                    <tr style="background-color:#d9edf7;">
                        <th class="text-center">Location</th>
                        <th class="text-center">Deal</th>
                        <th class="text-center">Exception</th>
                        <th class="text-center">Customer</th>
                        <th class="text-center">Deal Date</th>
                        <th class="text-center">Stk #</th>
                        <th class="text-center">Year</th>
                        <th class="text-center">Make</th>
                        <th class="text-center">Model</th>
                        <th class="text-center">Days</th>
                        <th class="text-center">Associates</th>
                        <th class="text-center">Fin Mgr</th>
                        <th class="text-center">Bank</th>
                        <th class="text-center">APR</th>
                        <th class="text-center">Buy Rate</th>
                        <th class="text-center">Term</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var deal in Model.ExceptionDetails)
                {
                    var rateException = "";
                    foreach (var exception in SalesCommission.Business.Enums.RateExceptions)
                    {
                        if (exception.ExceptionID.ToUpper().Trim() == deal.sl_rate_exception.ToUpper().Trim())
                        {
                            rateException = exception.Name;
                        }
                    }

<tr>
    <td>@deal.sl_VehicleLoc</td>
    <td class="text-center"><a href="@applicationPath/Sales/DealDetail/@deal.sl_dealkey">@deal.sl_dealkey</a></td>
    <td class="text-center">@rateException</td>
    <td class="text-center">@deal.sl_VehicleBuyerName</td>
    <td class="text-center">@deal.sl_VehicleDealDate.ToShortDateString()</td>
    <td class="text-center">@deal.sl_VehicleStockNumber</td>
    <td class="text-center">@deal.sl_VehicleYear</td>
    <td class="text-center">@deal.sl_VehicleMake</td>
    <td class="text-center">@deal.sl_VehicleCarline</td>
    <td class="text-center">@deal.sl_VehicleDaysInStock</td>
    <td class="text-center">@deal.sl_SalesAssociate1<br />@deal.sl_SalesAssociate2</td>
    <td class="text-center">@deal.sl_FinMgr</td>
    <td class="text-center">@deal.sl_BankName</td>
    <td class="text-center">@deal.sl_apr</td>
    <td class="text-center">@deal.sl_buyRate</td>
    <td class="text-center">@deal.sl_VehicleTerm</td>
</tr>
                                }
                </tbody>

            </table>


        }
    </div>
    </div>
@section scripts
{

    <script src="~/Scripts/jquery-ui.js" type="text/javascript"></script>
<script type="text/javascript">
                $('#associate-appraisal-table').DataTable({
                    searching: true,
                    dom: 'Bfrti',
                    pageLength: -1,
                    order: [[1, "desc"]],
                    buttons: [
                        {
                            extend: 'copyHtml5', footer: true,
                        },
                        {
                            extend: 'excelHtml5', footer: true,
                        },
                        {
                            extend: 'pdfHtml5', footer: true,
                            orientation: 'landscape'
                        },
                        {
                            extend: 'print', footer: true,
                            orientation: 'landscape'
                        }
                    ],
                    columnDefs: [
                        { type: 'any-number', targets: [6,9,13,14,15] },
                        { type: 'date', targets: [4] }
                    ],
                    retrieve: true
                });

</script>
}